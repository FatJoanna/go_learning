import java.io.File

svtype = ''
env = ''
branch = ''
repos = ''
userInput=''
feature=''
expire=5
g_deploy_state = 0

mai_py2_svtype_list = """
search
company_match
finance
ge
gossip_algo
headline_dbg
headline_rec
qr
saab
sug
usertag
web
webreg
"""

mai_svtype_list = """
account
ads
aigc
api
billionaire
censor
censor_admin
company
creative
enterprise
experience
feed
file
finance
gcs
gcs_agent
gossip
growth
growth_api
headline
im
jobs
jarvis
maicoin
member
network
pastor
pay
pbs
polaris_admin
qr
sprofile
sug
touch
userprofile
"""

node_map = [
    '主 node [node_main]': 'node_main',
    'pn node [node_profile]': 'node_profile',
    '招聘 node [node_jobs]': 'node_jobs',
    '招聘 node [node_bizjobs]': 'node_bizjobs',
    '增长 node [node_growth]': 'node_growth',
    '会员 node [node_bizmember]': 'node_bizmember',
    '实名 node [node_content]': 'node_content',
    '触达平台 [node_preacher]': 'node_preacher',
    '脉芽平台 [maiya_fe]': 'maiya_fe',
    '脉芽h5 [maiya_next_h5]': 'maiya_next_h5',
    'billionaire 后台 [billionaire 后台]': 'node_billionaire',
    '客服 node [node_cs]': 'node_cs',
    '配置中心 node [node_dash]': 'node_dash',
    '人才银行 && 企业号 [enterprise_fe]': 'enterprise_fe',
    'node_business_content': 'node_business_content',
    'node_business_ad': 'node_business_ad',
    'node_business_job': 'node_business_job',
    'node_business_online': 'node_business_online',
    'node_business_pn': 'node_business_pn',
    'node_business_growth': 'node_business_growth',
    'node_business_platform': 'node_business_platform',
    'node_business_member': 'node_business_member',
]

maigo_svtype_list = """go_org_orgserver
go_fp_fpserver
go_org_orgserver
go_gossip_darwin
go_gossip_darwinbg
go_gossip_tagging
go_jesus
go_pbs
go_im
go_growth
go_search
go_search_front
go_recall_talent
go_recall_feed
go_recall_gossip
go_recall_topic
go_recall_theme
go_recall_headline
go_recall_job
go_recall_network
go_recall_company
go_jobs_talent_search
go_interests
go_group_cache
go_profile_dc
go_edison
go_jinx
go_yatsen
go_jobs_job_index_adapter
go_aml_predictmgr
go_aml_predict
go_aml_predictdc

"""

service_repos = """
py2
py3
node
go
"""

service_map = [
    'py2': mai_py2_svtype_list,
    'py3': mai_svtype_list,
    'node': [],
    'go': maigo_svtype_list
]

packers="""10.16.0.16
10.16.0.12
"""

group_name_list="""无
jobs
pn
content
platform
growth
"""


// 默认使用goc build
def gocDefaultService = [
'go_search', 'go_search_front', 'go_im',
'go_recall_company' ,'go_recall_feed' ,'go_recall_gossip' ,
'go_recall_headline' ,'go_recall_job' ,'go_recall_talent' ,
'go_recall_network', 'go_recall_topic','go_recall_job',
'go_recall_theme', 'go_recall_headline',
'go_gossip_darwin', 'go_jinx', 'go_edison'
]

node {
   try {
       stage('Preparation') {
            input id: "input git repos name", message: "请选择 git repos",
                parameters: [
                    choice(
                        name: "name",
                        choices: ["py2", "py3", "node", "go"],
                        description: "service repos\n"
                    )
                ]
       }
   } catch (exc) {
       println exc
       println userInput
       g_deploy_state = 1
   }

   try {
       stage('Pre Deploy') {
            timeout(time: 1, unit: "MINUTES") {
                def cmd = "echo pre deploy "
                ssh cmd
            }
       }

       stage('Build&&Deploy') {
            timeout(time: 60, unit: "MINUTES") {
                def cmd = "echo build"
                ssh cmd
            }
       }
       currentBuild.result = "SUCCESS"
   } catch (exc) {
       println exc
       currentBuild.result = "FAILURE"
   }

}

